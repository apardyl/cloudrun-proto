syntax = "proto3";

package nodecontrol;

// Register node in controller
message NodeRegisterRequest {
    string hostname = 1;
    string secret = 2;
    repeated string capability = 3;
}

// Controller's response to node's registration
message NodeRegisterResponse {
    enum RegistrationResponse {
        OK = 0;
        UNAUTHORISED = 1;
    }
    RegistrationResponse response = 1;
}

// server -> node request
message NodeRequest {
    // Allocate node for client session
    message NodeAllocateRequest {
        string client_name = 1;
        string client_pubkey = 2;
    }

    // End any active session on node
    message NodeFreeRequest {
        bool kill_active_session = 1;
    }

    // Check node status
    message NodeStatusRequest {
    }

    // Node's response to allocate/free/status requests
    message NodeResponse {
        enum AllocationResponse {
            OK = 0;
            UNAVAILABLE = 1;
            UNAUTHORISED = 2;
        }
        AllocationResponse response = 1;
    }

    oneof request {
        NodeAllocateRequest allocate_request = 1;
        NodeFreeRequest free_request = 2;
        NodeStatusRequest status_request = 3;
    }
}
